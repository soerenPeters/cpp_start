name: analyse

on: [push, pull_request]

jobs:
  gcov:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Install gcov
        run: |
          sudo apt-get update -y
          sudo apt-get install -y gcovr
          gcovr --version
          sudo apt-get install -y libboost-filesystem1.71-dev

      - name: build
        run: |
          mkdir build
          cd build
          cmake .. -DBUILD_COVERAGE=ON -DBUILD_USE_OPENMP=ON -DBUILD_BOOST_EXAMPLE=ON
          make
          ctest

      - name: gcov
        run: |
          mkdir gcov
          gcovr "build" -r . -k -f "src" -f "build/buildMetaPath" --print-summary --html gcov/coverage.html --html-details --xml gcov/coverage.xml --sonarqube gcov/sonarqube.xml

      - name: Upload gcov
        uses: actions/upload-artifact@v2
        with:
          name: gcov
          path: gcov/
###########################################################################
  clang-tidy:
    runs-on: ubuntu-20.04

    container:
      image: bssoeren/cpp_build_starter:latest
    steps:
      - uses: actions/checkout@v2

      - name: configure
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: run clang-tidy
        run: cd build && run-clang-tidy -quiet > clangtidy.txt

      - name: Upload clang-tidy
        uses: actions/upload-artifact@v2
        with:
          name: clang-tidy
          path: |
            build/clangtidy.txt
            build/compile_commands.json

###########################################################################
  cppcheck:
      runs-on: ubuntu-20.04

      container:
        image: bssoeren/cpp_build_starter:latest
      steps:
        - uses: actions/checkout@v2

        - name: install cppcheck
          run: |
            apt-get update
            apt-get install -y cppcheck

        - name: run cppcheck
          run: |
            cppcheck --version
            cppcheck src --enable=all --xml 2> cppcheck.xml

        - name: upload cppcheck
          uses: actions/upload-artifact@v2
          with:
            name: cppcheck
            path: |
              cppcheck.xml

###########################################################################
  sonarcloud:
    runs-on: ubuntu-20.04
    needs: [gcov]
    steps:
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Download gcov result
        uses: actions/download-artifact@v2
        with:
          name: gcov
          path: gcov

      - name: get sonar scanner
        run: |
          cd /tmp
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.5.0.2216-linux.zip
          unzip sonar-scanner-cli-4.5.0.2216-linux.zip

      - name: get build wrapper
        run: |
          cd /tmp
          wget https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
          unzip build-wrapper-linux-x86.zip

      - name: build with build-wrapper
        run: |
          mkdir build
          cd build
          cmake ..
          /tmp/build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir build_wrapper_output_directory make clean all

      - name: run sonar scanner
        run: |
          /tmp/sonar-scanner-4.5.0.2216-linux/bin/sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

